<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <title>통계</title>
    <style>
        .statistic-section {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        .subscriber-section, .reservation-section {
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            background-color: #f9f9f9;
        }
        .subscriber-section h3, .reservation-section h3 {
            margin-top: 0;
        }
        canvas {
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    <div class="main-content">
        <h1>통계</h1>
        <div class="statistic-section">
    	    <div class="subscriber-section">
                <h2>현재 가입자수</h2>
                <p id="subscriberCount"><%= subscribers.length %></p>
            </div>

            <div class="reservation-section">
                <h3>날짜별 예약건수</h3>
                <canvas id="reservationChart"></canvas>
	        </div>
            <script>
                    // 서버로부터 전달된 예약 데이터
                    const reservationData = <%- JSON.stringify(reservations) %>;

                    // 날짜별 예약 건수 집계
                    const reservationCounts = {};
                    reservationData.forEach(reservation => {
                        if (reservation.reservationDate) {  // 날짜가 NULL이 아닌 경우만 처리
                            const date = reservation.reservationDate.split('T')[0]; // 날짜 부분만 추출
                            if (reservationCounts[date]) {
                                reservationCounts[date]++;
                            } else {
                                reservationCounts[date] = 1;
                            }
                        }
                    });

                    // 데이터베이스에서 가장 첫 날짜와 마지막 날짜를 구합니다.
                    const allDates = Object.keys(reservationCounts).sort();
                    const firstDate = new Date(allDates[0]);
                    const lastDate = new Date(allDates[allDates.length - 1]);

                    // 모든 날짜를 포함하는 배열 생성
                    const dates = [];
                    for (let d = firstDate; d <= lastDate; d.setDate(d.getDate() + 1)) {
                    const dateStr = d.toISOString().split('T')[0];
                    dates.push(dateStr);
                    }

                    // 모든 날짜에 대해 예약 건수를 할당, 없는 날짜는 0으로 설정
                    const counts = dates.map(date => reservationCounts[date] || 0);

                    // Chart.js를 사용하여 그래프 생성
                    const ctx = document.getElementById('reservationChart').getContext('2d');
                    const reservationChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: dates,
                            datasets: [{
                                label: '예약 건수',
                                data: counts,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                x: {
                                    type: 'category',
                                    title: {
                                        display: true,
                                        text: 'Date'
                                    }
                                },
                                y: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: '예약 건수'
                                    }
                                }
                            }
                        }
                    });
            </script>
        </div>
    </div>
</body>


