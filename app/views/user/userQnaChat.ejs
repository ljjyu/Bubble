<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅형 문의</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
            background-color: #f4f4f4;
        }
        .container {
            display: flex;
            flex-direction: column;
            padding: 20px;
            flex: 1;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }
        select, input, button {
            margin-bottom: 10px;
        }
        select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        #chat-box {
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 100%;
            height: 400px;
            overflow-y: auto;
            background-color: #fafafa;
            padding: 10px;
            margin-bottom: 10px;
            box-sizing: border-box;
        }
        #chat-box p {
            margin: 5px 0;
        }
        #chat-box strong {
            color: #333;
        }
        #message-input {
            width: 80%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        #send-button {
            width: 18%;
            padding: 10px;
            border: none;
            border-radius: 4px;
            background-color: #4CAF50;
            color: white;
            font-size: 16px;
            cursor: pointer;
            box-sizing: border-box;
        }
        #send-button:hover {
            background-color: #45a049;
        }
        #message-status {
            color: red;
            font-size: 14px;
        }
        #loading {
            text-align: center;
            font-size: 16px;
            color: #666;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>채팅형 문의</h1>
        <select id="branch-select">
            <% branches.forEach(branch => { %>
                <option value="<%= branch.branchID %>"><%= branch.branchName %></option>
            <% }) %>
        </select>
        <div id="loading">로딩 중...</div>
        <div id="chat-box"></div>
        <div style="display: flex; align-items: center;">
            <input type="text" id="message-input" placeholder="Enter your message">
	    <button id="send-button">보내기</button>
        </div>
        <div id="message-status"></div>
    </div>

    <script>
        $(document).ready(function() {
            $('#loading').show();
            $('#chat-box').hide();

            async function receiveMessages() {
                try {
                    const response = await $.ajax({
                        url: '/user/qnaChat/chatLogs',
                        method: 'GET',
                        data: { branchID: $('#branch-select').val() }
                    });
                    if (response.chatLogs) {
                        $('#chat-box').empty();
                        response.chatLogs.forEach(log => {
                            $('#chat-box').append(`<p><strong>${log.senderEmail}:</strong> ${log.chatting}</p>`);
                        });
                    }
                } catch (err) {
                    console.error('Error receiving messages:', err);
                } finally {
                    $('#loading').hide();
                    $('#chat-box').show();
                }
            }

            receiveMessages(); // 페이지 로드 시 즉시 메시지 로드

            setInterval(receiveMessages, 2000); // 주기적으로 메시지 로드

            $('#send-button').click(async function() {
                const message = $('#message-input').val();
                const branchID = $('#branch-select').val();

                if (message && branchID) {
                    try {
                        const managerResponse = await $.ajax({
                            url: '/user/qnaChat/getManagerEmail',
                            method: 'GET',
                            data: { branchID }
                        });

                        const recipient = managerResponse.managerEmail;

                        const response = await $.ajax({
                            url: '/user/qnaChat/chatting',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ recipient, message, branchID }),
                        });

                        if (response.result === 'both') {
                            $('#chat-box').append(`<p><strong>You:</strong> ${message}</p>`);
                        } else {
                            $('#message-status').text("메시지 보내기 실패");
                        }

                        $('#message-input').val('');
                    } catch (err) {
                        console.error('Error sending message:', err);
                        $('#message-status').text(`Error: ${err.statusText}`);
                    }
                }
            });
        });
    </script>
</body>
</html>
